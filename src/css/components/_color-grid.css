.grid {
  list-style: "";
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  padding: 0;
  margin: 0 auto;
}

.swatch {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  justify-content: end;
  border-radius: var(--border-radius-lg);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  padding: 1rem;
  aspect-ratio: 1/1;
  transition: all 0.1s;
  text-align: center;

  &:hover {
    transform: scale(1.04);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
  }
}

.hex {
  position: relative;
  z-index: 0;
  /* font-family: monospace; */
  display: inline-block;
  color: var(--swatch-hex-text-color);
  font-size: 2rem;
  font-weight: 700;

  /* This effect only works if .hex is not a child of a flex-item (so .hex is wrapped in a div) */
  &::before {
    position: absolute;
    content: attr(data-text);
    z-index: -1;
    -webkit-text-stroke: 5px var(--swatch-hex-text-outline, #000);
  }
}

.name {
  display: inline-block;
  padding: 0 0.2em;
  background-color: var(--swatch-name-bg);
  color: var(--swatch-name-text-color);
  font-size: 1.2rem;
  border-radius: var(--border-radius-sm);
  opacity: 0;
  translate: 0 100%;
}

.swatch:hover .name,
.name:focus {
  opacity: 1;
  translate: 0;
  transition: opacity 1s, translate 0.3s;
}

.color-list-empty {
  display: none;
}

/* When the grid doesn't have list items that are not hidden (i.e. has no visible items)... */
.grid:not(:has(li:not([style*="display: none"]))) {
  /* ...content is visible in adjacent div */
  + div .color-list-empty {
    display: block;
    font-size: 2rem;
    text-align: center;
    
  }
}
